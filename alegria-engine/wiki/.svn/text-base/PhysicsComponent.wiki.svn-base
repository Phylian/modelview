#summary Information about the Physics component.

= Introduction =

The Physics component assigns a physical body to the entity to be simulated
by the Box2D physics engine. If an entity has a Physics component, the Render component will use its position and rotation to render the entity on screen.

The parameters to define the physical behavior of the body are defined below.

= Parameters =

|| *Parameter* || *Type* || *Description* ||
|| friction || float ||  ||
|| restitution || float ||  ||
|| density || float || ||
|| sensor || bool || Sensor objects detect collision (conditions can be used) but don't react to it (v.g. don't bounce) ||
|| shape || circle/box/polygon ||  ||
|| shape_size || float || For box shapes it specifies the side length of the box. For circle shapes it specifies the _diameter_. For polygon shapes it scales the shape. ||
|| linear_damping || float ||  ||
|| angular_damping || float ||  ||
|| type || static/dynamic||  ||
|| fixed_rotation || bool || Stops the body from rotating. ||
|| bullet || bool || Bullet objects have a better collision detection (perfect for quick-moving objects, hence the name) ||
|| point || float float || _Only for polygon shaped objects_. Describes a of the polygon. Thye must be specified in a counter clockwise order.  ||

= Condition =
= Python API =
To get the Physics component user must call the GetComponent method of the object owner. 
Example:
{{{
physics_comp = owner.GetComponent("Physics")
}}}