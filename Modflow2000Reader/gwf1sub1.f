! Time of File Save by ERB: 4/1/2005 11:49AM
C     Last change:  SAL   3 Sep 2003    7:37 am
      SUBROUTINE GWF1SUB1ALP(NROW,NCOL,NLAY,ITERP,IIBSCB,ISUBOC,AC1,AC2,
     1    ITMIN,NNDB,NDB,NMZ,NN,NND1,ND1,ND2,IDSAVE,IDREST,ISSFLG,NPER,
     2    NSTP,NSTPT,IN,IOUT,ISIP,LCV,ISEN,IERROR)
C
C-----VERSION 0000 22SEP2004 GWF1SUB1ALP
C     ******************************************************************
C     ALLOCATE ARRAY STORAGE FOR SUBSIDENCE PACKAGE
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE SUBARRAYS
      CHARACTER*24 ANAME
      CHARACTER*200 LINE
      DIMENSION ISSFLG(NPER),NSTP(NPER)
      DATA ANAME/'NUMBER OF BEDS IN SYSTEM'/
C     ------------------------------------------------------------------
C0------Define SIP LCV array pointer  if SIP is inactive.
      IF(ISIP.LE.0) LCV=1
C
C1------IDENTIFY PACKAGE.
c      WRITE(IOUT,1)IN
c    1 FORMAT(/,'SUB1 -- SUBSIDENCE PACKAGE, VERSION 1,',
c     1     ' 06/21/88',' INPUT READ FROM UNIT',I3)
C
C2------CHECK TO SEE THAT SUBSIDENCE OPTION IS APPROPRIATE
C2------IF INAPPROPRIATE PRINT A MESSAGE & STOP THE SIMULATION.
C2------ALSO, SUM TO GET THE TOTAL NUMBER OF TIME STEPS IN THE
C2------SIMULATION.
C
      NSTPT=0
      DO 12 NS=1,NPER
      NSTPT=NSTPT+NSTP(NS)
      IF(ISSFLG(NS).NE.0.AND.NS.GT.1) THEN
	  IERROR = 1
	  return
c       WRITE(IOUT,10)
c   10  FORMAT(1X,'SUBSIDENCE CANNOT BE USED IN SIMULATIONS',
c     1  ' IN WHICH STRESS PERIODS OTHER THAN THE ',/,1X,
c     2  ' FIRST ARE STEADY-STATE. SIMULATION ABORTED.')
c       CALL USTOP(' ')
      ENDIF
 12   CONTINUE
C2b------PRINT A MESSAGE AND STOP THE SIMULATION IF BOTH THE SEN
C2b------ PROCESS IS USED WITH THE SUB PACKAGE ACTIVE.
      IF(ISEN.GT.0) THEN
	  IERROR = 1
	  return
c       WRITE(IOUT,104)
c  104  FORMAT(1H0,'***ERROR*** THE SUB PACKAGE CANNOT BE USED ',
c     1     'WITH THE ',/,
c     2     'SENSITIVITY PROCESS. SIMULATION ABORTED. ')
c       CALL USTOP(' ')
      ENDIF
C
C ------ALLOCATE SPACE FOR ARRAY NTSSUM, WHICH WILL CONTAIN THE TOTAL
C ------NUMBER OF TIME STEPS PRIOR TO THE CURRENT TIME STEP.
      IF(ITERP.EQ.1) ALLOCATE(NTSSUM(NPER))
C
C4------READ FLAG FOR STORING CELL-BY-CELL STORAGE CHANGES AND
C4------FLAG FOR PRINTING AND STORING COMPACTION, SUBSIDENCE, AND
C4------CRITICAL HEAD ARRAYS.
!      READ(IN,'(A)') LINE
      CALL URDCOM(IN,IOUT,LINE) 
      LLOC=1
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IIBSCB,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISUBOC,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,NNDB,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,NDB,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,NMZ,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,NN,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,AC1,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,AC2,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ITMIN,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IDSAVE,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IDREST,R,IOUT,IN)
C-----
      IF(AC2.EQ.0.0) AC2=1.0
      NDF=.TRUE.
      NNDF=.TRUE.
      IF(NNDB.LT.1) THEN
       NNDF=.FALSE.
       NNDB=0
      ENDIF
      IF(NDB.LT.1) THEN
       NDF=.FALSE.
       NDB=0
       NMZ=0
       NN=0
      ENDIF
c      WRITE(IOUT,50) NNDB,NDB,NMZ,NN
c   50 FORMAT(/,'         NUMBER OF SYSTEMS OF NO-DELAYED INTERBEDS:',
c     1 I3,/,'              NUMBER OF SYSTEMS OF DELAY INTERBEDS:',
c     2 I3,/,'                          NUMBER OF MATERIAL ZONES:',
c     3 I3,/,'                    NUMBER OF NODES IN EACH STRING:',I3)
c      IF(IDSAVE.GT.0) THEN
c       WRITE(IOUT,52) IDSAVE
c   52 FORMAT(' RESTART INFORMATION WILL BE SAVED ON UNIT ', I5,
c     1 ' FOR DELAY INTERBEDS')
c      ELSE
c       WRITE(IOUT,53)
c   53 FORMAT(' RESTART INFORMATION WILL NOT BE SAVED FOR DELAY',
c     1 ' INTERBEDS')
c      ENDIF
c      IF(IDREST.GT.0) THEN
c       WRITE(IOUT,54) IDREST
c   54 FORMAT(' RESTART INFORMATION WILL BE READ FROM UNIT ', I5,
c     1 ' FOR DELAY INTERBEDS')
c      ELSE
c       WRITE(IOUT,55)
c   55 FORMAT(' RESTART INFORMATION WILL NOT BE READ FOR DELAY',
c     1 ' INTERBEDS')
c      ENDIF
C
C ------ABORT IF NO LAYERS ARE SPECIFIED FOR INTERBED STORAGE
      IF(.NOT.NNDF.AND..NOT.NDF) THEN
	  IERROR = 1
	  return
c       WRITE(IOUT,60)
c   60  FORMAT(1X,'NO LAYERS WITH INTERBED STORAGE OF EITHER TYPE ',
c     1  'WERE SPECIFIED IN INPUT.',/,1X,'SIMULATION ABORTED.')
c       CALL USTOP(' ')
      ENDIF
C ------ABORT IF NO PROPERTY ZONES ARE SPECIFIED
      IF(NDF.AND.NMZ.LT.1) THEN
	  IERROR = 1
	  return
c         WRITE(IOUT,*) ' STOPPING-- At least one property zone must ',
c     &                 'be specified for delay beds.'
c         CALL USTOP(' ')
      ENDIF
C ------ABORT IF NOT ENOUGH NODES ARE SPECIFIED
      IF(NDF.AND.NN.LT.2) THEN
	  IERROR = 1
	  return
c         WRITE(IOUT,*) ' STOPPING-- Number of nodes in strings for ',
c     &                 'delay beds (NN) should be at least 2.'
c         CALL USTOP(' ')
      ENDIF
C
C5------IF CELL-BY-CELL TERMS TO BE SAVED THEN PRINT UNIT NUMBER.
c   70 IF(IIBSCB.GT.0) WRITE(IOUT,80) IIBSCB
c   80 FORMAT(1X,'CELL-BY-CELL FLOW TERMS WILL BE SAVED ON UNIT',I3)
C
C5A-----IF OUTPUT CONTROL FOR PRINTING ARRAYS IS SELECTED PRINT MESSAGE.
c      IF(ISUBOC.GT.0) WRITE(IOUT,90)
c   90 FORMAT(1X,'OUTPUT CONTROL RECORDS FOR SUB1 PACKAGE WILL BE ',
c     1 'READ EACH TIME STEP.')
C ------READ IN MODEL LAYER NUMBERS FOR EACH SYSTEM OF INTERBEDS,
C ------FOR LAYERS WITHOUT DELAY.
      IF(NNDF) THEN
       IF(ITERP.EQ.1) ALLOCATE(LN(NNDB))
c       WRITE(IOUT,100) NNDB
c  100  FORMAT(/,' MODEL LAYER ASSIGNMENTS FOR EACH OF',I3,' NO-DELAY',
c     1  ' SYSTEMS OF INTERBEDS:')
       READ(IN,*) (LN(N),N=1,NNDB)
c       WRITE(IOUT,115) (LN(N),N=1,NNDB)
c  115  FORMAT(1X,25I4)
       DO 120 N=1,NNDB
       IF(LN(N).GE.1.AND.LN(N).LE.NLAY) GO TO 120
	  IERROR = 1
	  return
c       WRITE(IOUT,118)
c  118  FORMAT(/,' IMPROPER LAYER ASSIGNMENT FOR NO-DELAY SYSTEM OF ',
c     1  'INTERBEDS.',/,' ABORTING...')
c       CALL USTOP(' ')
  120  CONTINUE
      ENDIF
C ------READ IN MODEL LAYER NUMBERS FOR EACH SYSTEM OF INTERBEDS,
C ------FOR LAYERS WITH DELAY.
      IF(NDF) THEN
       IF(ITERP.EQ.1) ALLOCATE(LDN(NDB))
c       WRITE(IOUT,135) NDB
c  135  FORMAT(/,' MODEL LAYER ASSIGNMENTS FOR EACH OF',I3,' DELAY',
c     1  ' SYSTEMS OF INTERBEDS:')
       READ(IN,*) (LDN(N),N=1,NDB)
c       WRITE(IOUT,115) (LDN(N),N=1,NDB)
       DO 140 N=1,NDB
       IF(LDN(N).GE.1.AND.LDN(N).LE.NLAY) GO TO 140
	  IERROR = 1
	  return
c       WRITE(IOUT,138)
c  138  FORMAT(/,' IMPROPER LAYER ASSIGNMENT FOR DELAY SYSTEM OF ',
c     1  'INTERBEDS.',/,' ABORTING...')
c       CALL USTOP(' ')
  140  CONTINUE
      ENDIF
C
C ------
C
C8------ALLOCATE SPACE FOR THE ARRAYS HC, SCE, SCV, AND SUB.
      NCR=NROW*NCOL
      NND1=NCR*NNDB
      ND1=NCR*NDB
      ND2=0
C -----READ IN ARRAY RND TO SEE HOW MANY STRINGS OF NN CELLS ARE NEEDED.
      IF(NDF) THEN
       IF(ITERP.EQ.1) ALLOCATE(RNB(ND1))
       NNSUM=0
       DO 190 KQ=1,NDB
       LOC1 = 1+(KQ-1)*NCR
       LAYNUM=LDN(KQ)
c       WRITE(IOUT,144) KQ
c 144   FORMAT(/,1X,' SYSTEM',I4,' OF DELAY BEDS:')
       CALL U2DREL(RNB(LOC1),ANAME,NROW,NCOL,LAYNUM,IN,IOUT)
       DO 180 N=1,NCR
       IF(RNB(LOC1+N-1).GE.1.0) NNSUM=NNSUM+1
  180  CONTINUE
  190  CONTINUE
       ND2=NN*NNSUM
      ENDIF
      IF(ND2.LT.1.AND.NDF) THEN
	  IERROR = 1
	  return
c         WRITE(IOUT,*) ' STOPPING-- Delay beds were not found in ',
c     &                 ' array specifying numbers of delay beds (RNB).'
c         CALL USTOP(' ')
      ENDIF
C
      IF(ITERP.EQ.1) THEN
         ALLOCATE(OCFLGS(13,NSTPT))
         ALLOCATE(OCLAY(NLAY))
      ENDIF
      IF(NNDF.AND. ITERP.EQ.1) THEN
         ALLOCATE(HC(NND1))
         ALLOCATE(SCE(NND1))
         ALLOCATE(SCV(NND1))
         ALLOCATE(SUB(NND1))
         ALLOCATE(ILSYS(NNDB))
      ENDIF
      IF(NDF.AND. ITERP.EQ.1) THEN
         ALLOCATE(NZ(ND1))
         ALLOCATE(DZ(ND1))
         ALLOCATE(DCOM(ND1))
         ALLOCATE(DHP(ND2))
         ALLOCATE(DH(ND2))
         ALLOCATE(DHC(ND2))
         ALLOCATE(DP(NMZ,3))
         ALLOCATE(DVB(NDB,4))
         ALLOCATE(A1(NN))
         ALLOCATE(A2(NN))
         ALLOCATE(BB(NN))
      ENDIF
C ------ALLOCATE SPACE FOR OUTPUT CONTROL FLAGS
C
C10-----RETURN.
      RETURN
      END
      SUBROUTINE GWF1SUB1RPP(DELR,DELC,HNEW,BUFF,NCOL,NROW,NLAY,NODES,
     1   NPER,NSTP,ISUBOC,NND1,ND1,ND2,NDB,NNDB,
     2   NMZ,NN,IDSAVE,IDREST,NSTPT,IN,IOUT, IERROR)
C
C-----VERSION 0000 03SEP2003 GWF1SUB1RPP
C     ******************************************************************
C     READ SUBSIDENCE PACKAGE DATA
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE SUBARRAYS ,ONLY: RNB,LN,LDN,DHP,DH,DHC,NZ,DZ,DCOM,DP,DVB,
     1                       HC,SCE,SCV,SUB,NDF,NNDF,OCFLGS,NTSSUM,
     2                       ISBOCF,ISBOCU
      DOUBLE PRECISION HNEW
      DIMENSION IFL(13)
      DIMENSION HNEW(NODES),DELR(NCOL),DELC(NROW),BUFF(NODES),
     1  NSTP(NPER)
      CHARACTER*24 ANAME(9)
      CHARACTER*200 LINE
C
      DATA ANAME(1) /'   PRECONSOLIDATION HEAD'/
      DATA ANAME(2) /'ELASTIC INTERBED STORAGE'/
      DATA ANAME(3) /' VIRGIN INTERBED STORAGE'/
      DATA ANAME(4) /'     STARTING COMPACTION'/
      DATA ANAME(5) /'     DELAY STARTING HEAD'/
      DATA ANAME(6) /'   DELAY PRECOLSOL. HEAD'/
      DATA ANAME(7) /'DELAY INITIAL COMPACTION'/
      DATA ANAME(8) /'DELAY INTERBED THICKNESS'/
      DATA ANAME(9) /'   MATERIAL ZONE INDICES'/
C     ------------------------------------------------------------------
C
      NCR=NROW*NCOL
      ANNI=0.5/(FLOAT(NN)-.5)
C
C  -----READ RESTART RECORDS IF THIS SIMULATION CONTINUES FROM A
C  -----PREVIOUS SIMULATION
      IF(NDF) THEN
       IF(IDREST.GT.0) THEN
        READ(IDREST) NND2
        IF(NND2.EQ.ND2) THEN
c         WRITE(IOUT,42)
c   42    FORMAT(' HEAD AND PRECONSOLIDATION HEAD FOR DELAY BEDS ARE',
c     1   ' BEING READ FROM RESTART RECORDS')
         READ(IDREST) (DH(N),N=1,ND2)
         READ(IDREST) (DHC(N),N=1,ND2)
         DO 50 N2=1,ND2
         DHP(N2)=DH(N2)
  50     CONTINUE
        ELSE
	    IERROR = 1
	    return
c         WRITE(IOUT,52)
c   52    FORMAT(' HEAD AND PRECONSOLIDATION HEAD FOR DELAY BEDS ',
c     1   'CANNOT BE READ FROM RESTART RECORDS',/,
c     2   ' SIMULATION ABORTING')
c         CALL USTOP(' ')
        ENDIF
       ENDIF
      ENDIF
C  -----READ IN ARRAYS FOR SYSTEMS OF NO-DELAY INTERBEDS.
      IF(NNDF) THEN
       DO 60 KQ=1,NNDB
       K=LN(KQ)
       LOC1=1+(KQ-1)*NCR
c       WRITE(IOUT,56) KQ
c  56   FORMAT(/,1X,' SYSTEM',I4,' OF NO-DELAY BEDS:')
       CALL U2DREL(HC(LOC1),ANAME(1),NROW,NCOL,K,IN,IOUT)
c       WRITE(IOUT,56) KQ
       CALL U2DREL(SCE(LOC1),ANAME(2),NROW,NCOL,K,IN,IOUT)
c       WRITE(IOUT,56) KQ
       CALL U2DREL(SCV(LOC1),ANAME(3),NROW,NCOL,K,IN,IOUT)
c       WRITE(IOUT,56) KQ
       CALL U2DREL(SUB(LOC1),ANAME(4),NROW,NCOL,K,IN,IOUT)
   60  CONTINUE
CC
C  -----INITIALIZE ARRAYS FOR SYSTEMS OF NO-DELAY INTERBEDS.
       DO 80 KQ=1,NNDB
       K=LN(KQ)
       NQ=(KQ-1)*NCR
       NK=(K-1)*NCR
       DO 70 IR=1,NROW
       NQR=NQ+(IR-1)*NCOL
       NKR=NK+(IR-1)*NCOL
       DO 70 IC=1,NCOL
       LOC2=NQR+IC
       LOC2H=NKR+IC
CC
C ------MULTIPLY STORAGE BY AREA TO GET STORAGE CAPACITY.
       AREA=DELR(IC)*DELC(IR)
       SCE(LOC2)=SCE(LOC2)*AREA
       SCV(LOC2)=SCV(LOC2)*AREA
CC
C ------MAKE SURE THAT PRECONSOLIDATION HEAD VALUES
C ------ARE CONSISTANT WITH STARTING HEADS.
       IF(HC(LOC2).GT.HNEW(LOC2H)) HC(LOC2)=HNEW(LOC2H)
   70  CONTINUE
   80  CONTINUE
      ENDIF
      IF(NDF) THEN
C  -----READ IN TABLE OF MATERIAL PROPERTIES: K, Sse, Ssv FOR EACH
C  -----OF NMZ ZONES.
c       WRITE(IOUT,95)
c   95 FORMAT(/,' MATERIAL PROPERTIES OF INTERBEDS WITH DELAY PROPERTIES'
c     1 ,//,'   ZONE        HYDRAULIC           ELASTIC            INEL',
c     2 'ASTIC       ',/,'  NUMBER      CONDUCTIVITY     SPECIFIC STORA',
c     3 'GE    SPECIFIC STORAGE   ',/,' ',69('-'))
       DO 100 N=1,NMZ
       READ(IN,*) (DP(N,NP),NP=1,3)
  100  CONTINUE
c       WRITE(IOUT,105) (N,(DP(N,NP),NP=1,3),N=1,NMZ)
c  105  FORMAT(I5,4X,G15.5,5X,G15.5,5X,G15.5)
       LOC3=0
       LOC4=0
       DO 180 KQ=1,NDB
       K=LDN(KQ)
       LOC1=1+(KQ-1)*NCR
C  -----READ IN ARRAYS FOR SYSTEMS OF DELAY INTERBEDS.
       IF(IDREST.LE.0) THEN
c        WRITE(IOUT,108) KQ
c 108    FORMAT(/,1X,' SYSTEM',I4,' OF DELAY BEDS:')
        CALL U2DREL(BUFF,ANAME(5),NROW,NCOL,K,IN,IOUT)
        DO 120 N1=1,NCR
        LOC2=LOC1+N1-1
        IF(RNB(LOC2).LT.1.0) GO TO 120
        DO 115 N2=1,NN
        LOC3=LOC3+1
        DHP(LOC3)=BUFF(N1)
        DH(LOC3)=BUFF(N1)
  115   CONTINUE
  120   CONTINUE
c        WRITE(IOUT,108) KQ
        CALL U2DREL(BUFF,ANAME(6),NROW,NCOL,K,IN,IOUT)
        DO 130 N1=1,NCR
        LOC2=LOC1+N1-1
        IF(RNB(LOC2).LT.1.0) GO TO 130
        DO 125 N2=1,NN
        LOC4=LOC4+1
        DHC(LOC4)=BUFF(N1)
        IF(DHC(LOC4).GT.DH(LOC4)) DHC(LOC4)=DH(LOC4)
  125   CONTINUE
  130   CONTINUE
       ENDIF
c       WRITE(IOUT,108) KQ
       CALL U2DREL(DCOM(LOC1),ANAME(7),NROW,NCOL,K,IN,IOUT)
c       WRITE(IOUT,108) KQ
       CALL U2DREL(DZ(LOC1),ANAME(8),NROW,NCOL,K,IN,IOUT)
c       WRITE(IOUT,108) KQ
       CALL U2DINT(NZ(LOC1),ANAME(9),NROW,NCOL,K,IN,IOUT)
C  -----INITIALIZE ARRAYS FOR SYSTEMS OF DELAY INTERBEDS.
       DO 160 NL=1,NCR
       LOC2=LOC1+NL-1
       IF(RNB(LOC2).GE.1.0.AND.DZ(LOC2).LE.0.0) THEN
	    IERROR = 1
	    RETURN
C          WRITE(IOUT,155)
C 155      FORMAT(' A VALUE OF ZERO WAS FOUND IN THE DZ ARRAY WHERE ',
C     1    'DELAY INTERBEDS OCCUR.',/,' MAKE SURE THAT',
C     2    ' DZ IS GREATER THAN 0.0 AT ALL CELLS WHERE RNB ',/,
C     3    ' IS 1.0 OR MORE. SIMULATION ABORTING')
C          CALL USTOP(' ')
       ENDIF
       DZ(LOC2)=DZ(LOC2)*ANNI
  160  CONTINUE
       DO 170 N=1,4
       DVB(KQ,N)=0.0
  170  CONTINUE
  180  CONTINUE
      ENDIF
C
C ------SET ALL FLAGS FOR OUTPUT CONTROL TO "FALSE".
      DO 360 I=1,NSTPT
      DO 350 N=1,13
      OCFLGS(N,I)=.FALSE.
  350 CONTINUE
  360 CONTINUE
C
C5------READ FORMATS AND UNIT NUMBERS OUTPUT FLAGS.
      IF(ISUBOC.GT.0) THEN
       READ(IN,'(A)') LINE
       LLOC=1
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCF(1),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCU(1),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCF(2),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCU(2),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCF(3),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCU(3),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCF(4),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCU(4),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCF(5),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCU(5),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCF(6),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISBOCU(6),R,IOUT,IN)
C       WRITE(IOUT,310) (ISBOCF(N),ISBOCU(N),N=1,6)
C  310  FORMAT(/,'             SUBSIDENCE PRINT FORMAT IS NUMBER',I4/
C     &            '                 UNIT FOR SAVING SUBSIDENCE IS',I4/
C     &            '    COMPACTION BY LAYER PRINT FORMAT IS NUMBER',I4/
C     &            '        UNIT FOR SAVING COMPACTION BY LAYER IS',I4/
C     &            '   COMPACTION BY SYSTEM PRINT FORMAT IS NUMBER',I4/
C     &            '       UNIT FOR SAVING COMPACTION BY SYSTEM IS',I4/
C     &            '  VERTICAL DISPLACEMENT PRINT FORMAT IS NUMBER',I4/
C     &            '      UNIT FOR SAVING VERTICAL DISPLACEMENT IS',I4/
C     &            ' NO-DELAY CRITICAL HEAD PRINT FORMAT IS NUMBER',I4/
C     &            '     UNIT FOR SAVING NO-DELAY CRITICAL HEAD IS',I4/
C     &            '    DELAY CRITICAL HEAD PRINT FORMAT IS NUMBER',I4/
C     &            '        UNIT FOR SAVING DELAY CRITICAL HEAD IS',I4)
       NTSSUM(1)=0
       IF(NPER.GT.1) THEN
        DO 370 N=2,NPER
        NTSSUM(N)=NTSSUM(N-1)+NSTP(N-1)
  370   CONTINUE
       ENDIF
       DO 450 NOCLIN=1,ISUBOC
       READ(IN,'(A)',END=500) LINE
       LLOC=1
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISP1,R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISP2,R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,JTS1,R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,JTS2,R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(1),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(2),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(3),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(4),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(5),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(6),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(7),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(8),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(9),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(10),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(11),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(12),R,IOUT,IN)
       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IFL(13),R,IOUT,IN)
       IF(ISP1.LT.1) ISP1=1
       IF(ISP1.GT.NPER) ISP1=NPER
       IF(ISP2.LT.1) ISP2=1
       IF(ISP2.GT.NPER) ISP2=NPER
       IF(ISP1.GT.ISP2) ISP1=ISP2
       DO 440 I=ISP1,ISP2
       J1=JTS1
       J2=JTS2
       IF(J1.LT.1) J1=1
       IF(J1.GT.NSTP(I)) J1=NSTP(I)
       IF(J2.LT.1) J2=1
       IF(J2.GT.NSTP(I)) J2=NSTP(I)
       IF(J1.GT.J2) J1=J2
       DO 430 J=J1,J2
       ILOC=NTSSUM(I)+J
       DO 420 N=1,13
       IF(IFL(N).GT.0) OCFLGS(N,ILOC)=.TRUE.
       IF(IFL(N).EQ.0) OCFLGS(N,ILOC)=.FALSE.
  420  CONTINUE
  430  CONTINUE
  440  CONTINUE
  450  CONTINUE
      ENDIF
C
C6------RETURN
  500 RETURN
      END

      SUBROUTINE GWF1SUB1DA()
C
C-----VERSION 0000 03DEC2003 GWF1SUB1DA
C     ******************************************************************
C     DEALLOCATE DYNAMIC STORAGE FOR SUB PACKAGE ARRAYS
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE SUBARRAYS
C     ------------------------------------------------------------------
C
C1-----DEALLOCATE ARRAY MEMORY
      IF(ALLOCATED(OCFLGS)) DEALLOCATE (OCFLGS)
      IF(ALLOCATED(OCLAY)) DEALLOCATE (OCLAY)
      IF(ALLOCATED(ILSYS)) DEALLOCATE (ILSYS)
      IF(ALLOCATED(RNB)) DEALLOCATE (RNB)
      IF(ALLOCATED(LN)) DEALLOCATE (LN)
      IF(ALLOCATED(DH)) DEALLOCATE (DH)
      IF(ALLOCATED(DHP)) DEALLOCATE (DHP)
      IF(ALLOCATED(DHC)) DEALLOCATE (DHC)
      IF(ALLOCATED(NZ)) DEALLOCATE (NZ)
      IF(ALLOCATED(DZ)) DEALLOCATE (DZ)
      IF(ALLOCATED(DP)) DEALLOCATE (DP)
      IF(ALLOCATED(HC)) DEALLOCATE (HC)
      IF(ALLOCATED(SCE)) DEALLOCATE (SCE)
      IF(ALLOCATED(SCV)) DEALLOCATE (SCV)
      IF(ALLOCATED(DCOM)) DEALLOCATE (DCOM)
      IF(ALLOCATED(DVB)) DEALLOCATE (DVB)
      IF(ALLOCATED(A1)) DEALLOCATE (A1)
      IF(ALLOCATED(A2)) DEALLOCATE (A2)
      IF(ALLOCATED(BB)) DEALLOCATE (BB)
      IF(ALLOCATED(SUB)) DEALLOCATE (SUB)
      IF(ALLOCATED(NTSSUM)) DEALLOCATE (NTSSUM)

C2-----RETURN
      RETURN
      END
